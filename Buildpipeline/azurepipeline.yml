resources:
  - repo: self
    clean: true
    

trigger:
- main
# Build and pub Nuget package for DocStore
# TODO make MyVersion just $(GitVersion.MajorMinorPatch) for master branch - perhaps - or GitVersion.NuGetVersionV2 NOT SURE
# So - when on develop the MyVersion ==  looks just fine.  
# When on a non-develop and non-master branch use

variables:
  GitVersion.SemVer: ''
  MyVersion: '$(GitVersion.MajorMinorPatch)-$(GitVersion.EscapedBranchName)-$(GitVersion.BuildMetaData)'

pool:
  vmImage: 'macOS-11'
  demands:
  - xcode
  - Xamarin.iOS
  - MSBuild
  - Xamarin.Android
  - JDK

name: _WAKA_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)

steps:

- task: NuGetToolInstaller@1
  inputs:
    versionSpec: '5.x'

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: sdk
    version: 6.0.x
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: gittools.gittools.setup-gitversion-task.gitversion/setup@0
  displayName: Configure GitVersion
  continueOnError: true
  inputs:
    versionSpec: 5.x    
- task: gittools.gittools.execute-gitversion-task.gitversion/execute@0
  displayName: Run GitVersion
  continueOnError: true
  inputs:
    updateAssemblyInfo: false

- bash: |
   echo "Setting SDK version to 6_12_0"
   SYMLINK=6_12_0
   MONOPREFIX=/Library/Frameworks/Mono.framework/Versions/$SYMLINK
   echo "##vso[task.setvariable variable=DYLD_FALLBACK_LIBRARY_PATH;]$MONOPREFIX/lib:/lib:/usr/lib:$DYLD_LIBRARY_FALLBACK_PATH"
   echo "##vso[task.setvariable variable=PKG_CONFIG_PATH;]$MONOPREFIX/lib/pkgconfig:$MONOPREFIX/share/pkgconfig:$PKG_CONFIG_PATH"
   echo "##vso[task.setvariable variable=PATH;]$MONOPREFIX/bin:$PATH"
   sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 6_12_0
   
   
   echo "Mono current"
   cd /Library/Frameworks/Mono.framework/Versions
   ls -l
   
   echo "Xamarin-iOS  current"
   cd  /Library/Frameworks/Xamarin.iOS.framework/Versions
   ls -l
   
   echo "Xamarin-Android  current"
   cd  /Library/Frameworks/Xamarin.Android.framework/Versions
   ls -l
   
   echo "Xamarin-Mac  current"
   cd /Library/Frameworks/Xamarin.Mac.framework/Versions 
   ls -l
   
   xcrun simctl erase all
  displayName: 'Set SDK Versions (Mono, Xamarin-iOS, Xamarin-Android, Xamarin-Mac)'

- script: echo '##vso[task.setvariable variable=MD_APPLE_SDK_ROOT;]'/Applications/Xcode_13.0.app;sudo xcode-select --switch /Applications/Xcode_13.0.app/Contents/Developer
  displayName: 'Updating xcode version'


- task: DotNetCoreCLI@2
  displayName: "Restore Microcharts.Forms packages"
  inputs:
    command: 'restore'
    projects: '**/Microcharts.Forms.csproj'
    restoreDirectory: '../../packages/'


- task: DotNetCoreCLI@2
  displayName: "Build Microcharts.Forms package"
  inputs:
    command: 'build'
    projects: '**/Microcharts.Forms.csproj'
    arguments: '--configuration Release'    


# - task: NuGetCommand@2  
#   displayName: 'Create Microchart.Forms NuGet package'
#   inputs:
#     command: 'pack'
#     packagesToPack: '**/Microcharts.Forms.nuspec'
#     configuration: 'Release'
#     versioningScheme: 'off'
#     buildProperties: 'version=$(GitVersion.MajorMinorPatch)-$(GitVersion.EscapedBranchName)-$(GitVersion.BuildMetaDataPadded)'


- task: MSBuild@1
  displayName: "Restore Microcharts.Droid packages"
  inputs:
    msbuildArguments: /t:restore
    solution: '**/Microcharts.sln'
    configuration: 'Release'
    restoreNugetPackages: true

- task: XamarinAndroid@1
  displayName: 'Build Microchart.Droid package'
  inputs:
    projectFile: '**/Microcharts.Droid.csproj'
    configuration: 'Release'
    createAppPackage: false
    jdkOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    msbuildVersionOption: '15.0'
    

# - task: NuGetCommand@2
#   displayName: "Create Microcharts.Core Nuget package"
#   inputs:
#     command: 'pack'
#     packagesToPack: '**/Microcharts.Core.nuspec'
#     configuration: 'Release'
#     versioningScheme: 'off'
#     buildProperties: 'version=$(GitVersion.MajorMinorPatch)-$(GitVersion.EscapedBranchName)-$(GitVersion.BuildMetaDataPadded)'

- task: NuGetCommand@2
  displayName: "Create Microcharts.Droid Nuget package"
  inputs:
    command: 'pack'
    packagesToPack: '**/Microcharts.Android.nuspec'
    configuration: 'Release'
    versioningScheme: 'off'
    buildProperties: 'version=$(GitVersion.MajorMinorPatch)-$(GitVersion.EscapedBranchName)-$(GitVersion.BuildMetaDataPadded)'

- task: XamariniOS@2
  displayName: 'Build Microchart.iOS package'
  inputs:
    solution: '**/Microcharts.iOS.csproj'
    # configuration: 'Release'

- task: NuGetCommand@2
  displayName: "Create Microcharts.IOS Nuget package"
  inputs:
    command: 'pack'
    packagesToPack: '**/Microcharts.iOS.nuspec'
    configuration: 'Release'
    versioningScheme: 'off'
    buildProperties: 'version=$(GitVersion.MajorMinorPatch)-$(GitVersion.EscapedBranchName)-$(GitVersion.BuildMetaDataPadded)'


- task: PublishBuildArtifacts@1
  displayName: "Publish Nuget packages"
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'


- task: NuGetCommand@2
  displayName: "Push to Nuget feed"
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '07581f72-b7dd-40bc-8318-ae6650290111'
    allowPackageConflicts: 'true'
    
